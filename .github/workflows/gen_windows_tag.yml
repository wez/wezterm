name: windows_tag

on:
  push:
    tags:
      - "20*"

jobs:
  build:
    runs-on: "windows-latest"
    

    steps:
      - name: "checkout repo"
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: "Install Rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          target: "x86_64-pc-windows-msvc"
      - name: "Cache cargo"
        uses: Swatinem/rust-cache@v2
        with:
          key: "windows-x86_64-pc-windows-msvc-2-${{ runner.os }}-cargo"
      - name: "Build (Release mode)"
        shell: cmd
        run: |

          PATH C:\Strawberry\perl\bin;%PATH%
          cargo build --all --release
      - name: "Install cargo-nextest from Cargo"
        uses: baptiste0928/cargo-install@v2
        with:
          crate: "cargo-nextest"
          cache-key: "windows"
      - name: "Test (Release mode)"
        shell: bash
        run: "cargo nextest run --all --release --no-fail-fast"
      - name: "Package"
        shell: bash
        run: "bash ci/deploy.sh"
      - name: "Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: "windows"
          path: |
            WezTerm-*.zip
            WezTerm-*.exe

  upload:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: "checkout repo"
        uses: actions/checkout@v4
      - name: "Download artifact"
        uses: actions/download-artifact@v3
        with:
          name: "windows"
      - name: "Checksum"
        shell: bash
        run: "for f in WezTerm-*.zip WezTerm-*.exe ; do sha256sum $f > $f.sha256 ; done"
      - name: "Create pre-release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh bash ci/create-release.sh $(ci/tag-name.sh)"
      - name: "Upload to Tagged Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh gh release upload --clobber $(ci/tag-name.sh) WezTerm-*.zip WezTerm-*.exe *.sha256"
      - name: "Checkout winget-pkgs"
        uses: actions/checkout@v4
        with:
          repository: "wez/winget-pkgs"
          path: "winget-pkgs"
          token: "${{ secrets.GH_PAT }}"
      - name: "Setup email for winget repo"
        shell: bash
        run: "cd winget-pkgs && git config user.email wez@wezfurlong.org"
      - name: "Setup name for winget repo"
        shell: bash
        run: "cd winget-pkgs && git config user.name 'Wez Furlong'"
      - name: "Create winget manifest and push to fork"
        shell: bash
        run: "bash ci/make-winget-pr.sh winget-pkgs WezTerm-*.exe"
      - name: "Submit PR"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        shell: bash
        run: 'cd winget-pkgs && gh pr create --fill --body "PR automatically created by release automation in the wezterm repo"'
