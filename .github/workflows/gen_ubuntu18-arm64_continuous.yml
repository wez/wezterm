
name: ubuntu18-arm64_continuous

on:
  schedule:
    - cron: "10 * * * *"


jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: "ubuntu-latest"
    container: "multiarch/ubuntu-core:arm64-bionic"
    steps:
    - name: "set APT to non-interactive"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
            

    - name: "Update APT"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            apt update
            

    - name: "Install git"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            apt-get install -y git
            

    - name: "Install curl"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            apt-get install -y curl
            

    - name: "checkout repo"
      uses: actions/checkout@v2
      with:
         submodules: "recursive"
    - name: "Fetch tags"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            git fetch --depth=1 origin +refs/tags/*:refs/tags/*
            

    - name: "Fetch tag/branch history"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            git fetch --prune --unshallow
            

    - name: "Install Rust"
      uses: actions-rs/toolchain@v1
      with:
         profile: "minimal"
         toolchain: "stable"
         override: true
         components: "rustfmt"
    - name: "Cache cargo registry"
      uses: actions/cache@v1
      with:
         path: "~/.cargo/registry"
         key: "ubuntu18-arm64-None-${{ hashFiles('Cargo.lock') }}-cargo-registry"
    - name: "Cache cargo index"
      uses: actions/cache@v1
      with:
         path: "~/.cargo/git"
         key: "ubuntu18-arm64-None-${{ hashFiles('Cargo.lock') }}-cargo-index"
    - name: "Cache cargo build"
      uses: actions/cache@v1
      with:
         path: "target"
         key: "ubuntu18-arm64-None-${{ hashFiles('Cargo.lock') }}-cargo-build-target"
    - name: "Install System Deps"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            ./get-deps
            

    - name: "Build (Release mode)"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            cargo build --all --release
            

    - name: "Test (Release mode)"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            cargo test --all --release
            

    - name: "Package"
      shell: bash
      run: |
            export BUILD_REASON=Schedule
            bash ci/deploy.sh
            

    - name: "Upload to Nightly Release"
      uses: wez/upload-release-assets@releases/v1
      with:
         files: "wezterm-*.deb;wezterm-*.xz;wezterm-*.tar.gz"
         release-tag: "nightly"
         repo-token: "${{ secrets.GITHUB_TOKEN }}"
