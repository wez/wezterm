name: ubuntu18

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".cirrus.yml"
      - "docs/*"
      - "ci/build-docs.sh"
      - "ci/generate-docs.py"
      - "ci/subst-release-info.py"
      - ".github/workflows/pages.yml"
      - ".github/ISSUE_TEMPLATE/*"
      - "**/*.md"

jobs:
  build:
    runs-on: "ubuntu-18.04"
    steps:
      - name: "Update APT"
        shell: bash
        run: "sudo -n apt update"
      - name: "Install git"
        shell: bash
        run: "sudo -n apt-get install -y git"
      - name: "checkout repo"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: "Fetch tags"
        shell: bash
        run: "git fetch --depth=1 origin +refs/tags/*:refs/tags/*"
      - name: "Fetch tag/branch history"
        shell: bash
        run: "git fetch --prune --unshallow"
      - name: "Install Rust"
        uses: actions-rs/toolchain@v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true
          components: "rustfmt"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - name: "Cache cargo"
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: "ubuntu18-None-2-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-cargo"
      - name: "Install System Deps"
        shell: bash
        run: "sudo -n env PATH=$PATH ./get-deps"
      - name: "Check formatting"
        shell: bash
        run: "cargo fmt --all -- --check"
      - name: "Build (Release mode)"
        shell: bash
        run: "cargo build --all --release"
      - name: "Test (Release mode)"
        shell: bash
        run: "cargo test --all --release"
      - name: "Package"
        shell: bash
        run: "bash ci/deploy.sh"
      - name: "Source Tarball"
        shell: bash
        run: "bash ci/source-archive.sh"
      - name: "Build AppImage"
        shell: bash
        run: "bash ci/appimage.sh"
      - name: "Move Package for artifact upload"
        shell: bash
        run: |
          mkdir pkg_
          mv *.deb *.xz pkg_
          mv *.AppImage *.zsync pkg_
      - name: "Upload artifact"
        uses: actions/upload-artifact@master
        with:
          name: "ubuntu18"
          path: "pkg_"
