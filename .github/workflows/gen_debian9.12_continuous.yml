name: debian9.12_continuous

on:
  schedule:
    - cron: "10 3 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - ".cirrus.yml"
      - "docs/**"
      - "ci/build-docs.sh"
      - "ci/generate-docs.py"
      - "ci/subst-release-info.py"
      - ".github/workflows/pages.yml"
      - ".github/workflows/verify-pages.yml"
      - ".github/ISSUE_TEMPLATE/*"
      - "**/*.md"

jobs:
  build:
    runs-on: "ubuntu-latest"
    container: "debian:9.12"
    steps:
      - name: "set APT to non-interactive"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
      - name: "Update APT"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          apt update
      - name: "Cache Git installation"
        uses: actions/cache@v2.1.7
        with:
          path: "/usr/local/git"
          key: "debian9.12-git-2.26.2"
      - name: "Install Git from source"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          apt-get install -y wget libcurl4-openssl-dev libexpat-dev gettext libssl-dev libz-dev gcc libextutils-autoinstall-perl make
          if test ! -x /usr/local/git/bin/git ; then
              cd /tmp
              wget https://github.com/git/git/archive/v2.26.2.tar.gz
              tar xzf v2.26.2.tar.gz
              cd git-2.26.2
              make prefix=/usr/local/git install
          fi
          ln -s /usr/local/git/bin/git /usr/local/bin/git
      - name: "Install curl"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          apt-get install -y curl
      - name: "Update APT"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          apt update
      - name: "Ensure /run/sshd exists"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          mkdir -p /run/sshd
      - name: "Install openssh-server"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          apt-get install -y openssh-server
      - name: "checkout repo"
        uses: actions/checkout@v2.4.0
        with:
          submodules: "recursive"
      - name: "Install Rust"
        uses: actions-rs/toolchain@v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true
          components: "rustfmt"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - name: "Cache cargo"
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: "debian9.12-None-2-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-cargo"
      - name: "Install System Deps"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          env PATH=$PATH ./get-deps
      - name: "Build (Release mode)"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          cargo build --all --release
      - name: "Test (Release mode)"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          cargo test --all --release
      - name: "Package"
        shell: bash
        run: |
          export BUILD_REASON=Schedule
          bash ci/deploy.sh
      - name: "Upload artifact"
        uses: actions/upload-artifact@v2
        with:
          name: "debian9.12"
          path: |
            wezterm-*.deb
            wezterm-*.xz
          retention-days: 5

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2.4.0
      - name: "Download artifact"
        uses: actions/download-artifact@v2
        with:
          name: "debian9.12"
      - name: "Upload to Nightly Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh gh release upload --clobber nightly wezterm-*.deb wezterm-*.xz"
